{"version":3,"sources":["components/Forms/Employees/SignUp/UseStyles.js","components/Forms/Employees/SignUp/SignUpValidationSchema.js","hooks/useHttp.js","components/Spiner/Spiner.jsx","components/Forms/Employees/SignUp/SignUp.js","components/Forms/Employees/SignIn/SignInValidationSchema.js","store/User.js","components/Forms/Employees/SignIn/UseStyles.js","components/Forms/Employees/SignIn/SignIn.js","components/CreateOrder/CreateOrder.js","components/Forms/NewOrder/NewOrderValidation.js","store/Order.js","components/Forms/NewOrder/NewOrder.js","pages/HomePage/HomePage.js","components/ExistsOrders/OrderListItem/OrderListItem.js","components/ExistsOrders/ExistsOrders.js","components/Order/OrderListItem/OrderListItem.js","components/Order/Order.js","components/CategoryList/CtegoryItem/CategoryItem.js","components/CategoryList/CategoryList.js","components/CoursesList/CourseItem/CourseItem.js","store/Courses.js","components/CoursesList/CoursesList.js","components/Forms/Administrators/SignIn/SignInValidationSchema.js","components/Forms/Administrators/SignIn/UseStyles.js","components/Forms/Administrators/SignIn/SignInAdmin.js","components/Admin/AddCourse/AddCourseValidation.js","components/Admin/AddCourse/AddCourse.js","components/Admin/RemoveCourse/CourseItem/CourseItem.js","components/Admin/RemoveCourse/RemoveList.js","components/NavBar/NavBar.js","pages/MainPage/MainPage.js","components/App/App.js","routes/Routes.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","height","width","signInContainer","backgroundColor","paper","margin","spacing","flexDirection","alignItems","avatar","color","signInInput","opacity","transition","form","marginTop","submit","validationSchema","Yup","email","required","password","min","max","firstName","lastName","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Spiner","className","SignUp","success","setSuccess","classes","formik","useFormik","initialValues","onSubmit","values","then","catch","e","alert","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","handleSubmit","TextField","autoComplete","name","value","onChange","handleChange","fullWidth","id","label","autoFocus","type","Button","Alert","severity","user","token","userId","role","makeAutoObservable","this","save","localStorage","setItem","removeItem","image","backgroundImage","backgroundRepeat","palette","grey","backgroundSize","backgroundPosition","SignIn","remrmber","setRemember","res","login","errors","FormControlLabel","control","Checkbox","onClick","target","checked","CreateOrder","to","placeNumber","employeeName","employeeId","orders","nrPlace","newOrder","uuidv4","orderList","price","push","filter","order","orderId","title","pk_course_id","count","idx","findIndex","candidate","course","courseId","idxCourse","list","map","orderForPay","placeN","status","waiter","Authorization","removeOrder","NewOrder","onFocusHandler","parentElement","classList","onFocusOutHandler","htmlFor","onFocus","onBlur","HomePage","OrderListItem","handleClick","onDelete","ExistsOrders","observer","history","useHistory","existsOrders","length","window","confirm","Order","key","removeFromOrderList","payOrder","CategoryItem","categories","categoryName","CategoryList","categoryList","category","i","CourseItem","composition","onAdd","setCount","src","alt","preventDefault","courses","Promise","resolve","reject","category_of_course","CoursesList","split","join","getCourse","fetchCourses","useEffect","getByCategoryName","img_path","addToOrderList","parseInt","SignInAdmin","remember","Box","mt","costPrice","categoryOfCourse","imgPath","AddCourse","cost_price","onRemove","RemoveList","deleteById","NavBar","logout","MainPage","children","App","ready","setReady","isAuthenticated","routes","path","render","match","params","param","exact","Routes","parse","getItem","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a90eff7f.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    height: \"100%\",\r\n    width: '80%'\r\n  },\r\n  signInContainer:{\r\n    backgroundColor: '#93628F'\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#472747',\r\n    color:'#F3DECD'\r\n  },\r\n  signInInput: {\r\n    backgroundColor: '#F3DECD',\r\n    opacity: '.5',\r\n    transition: '.4s',\r\n    '&:focus-within': {\r\n      opacity: '1',\r\n    }\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#492848',\r\n    color:'#F3DECD',\r\n    '&:hover':{\r\n      backgroundColor: '#271526'\r\n    }\r\n  }\r\n}));\r\n","import * as Yup from 'yup';\r\nexport const validationSchema = Yup.object(\r\n    {\r\n        email: Yup.string()\r\n            .email('Invalid email')\r\n            .required('Required'),\r\n        password: Yup.string()\r\n            .min(6, 'Too Short!')\r\n            .max(50, 'Too Long!')\r\n            .required('Required'),\r\n        firstName: Yup.string()\r\n            .required(),\r\n        lastName: Yup.string()\r\n            .required() \r\n    }\r\n);","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n\r\n            const response = await fetch(url, {method, body, headers})\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}","import React from \"react\";\r\nimport './spiner.css';\r\nexport const Spiner = () => (\r\n    <div className=\"lds-facebook\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { useFormik } from 'formik'\r\n\r\nimport { useStyles } from \"./UseStyles\"\r\n\r\nimport { validationSchema } from './SignUpValidationSchema'\r\nimport { useHttp } from \"../../../../hooks/useHttp\";\r\nimport { Spiner } from \"../../../Spiner/Spiner\";\r\n\r\n\r\nexport const SignUp = () => {\r\n  const [success, setSuccess] = useState(false)\r\n  const { loading, request, error } = useHttp();\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: '',\r\n      email: '',\r\n      firstName: '',\r\n      lastName: ''\r\n    },\r\n    onSubmit: (values) => {\r\n     request('/auth/register','POST', values)\r\n     .then(() => setSuccess(true))\r\n     .catch(e => alert.e)\r\n    },\r\n    validationSchema\r\n  })\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid className={classes.signInContainer} item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          {loading ? <Spiner/> :\r\n          <form className={classes.form} onSubmit={formik.handleSubmit} >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                className={classes.signInInput}\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  value={formik.values.firstName}\r\n                  required\r\n                  onChange={formik.handleChange}\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                className={classes.signInInput}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  value={formik.values.lastName}\r\n                  fullWidth\r\n                  onChange={formik.handleChange}\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  className={classes.signInInput}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  value={formik.values.email}\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  onChange={formik.handleChange}\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  className={classes.signInInput}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  value={formik.values.password}\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  onChange={formik.handleChange}\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </form>\r\n          }\r\n          { success && <Alert severity=\"success\">Успіх — Користувача створено!</Alert>}\r\n          { error && <Alert severity=\"error\">{`Увага виникла помилка! — ${error}`}</Alert>}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import * as Yup from 'yup';\r\nexport  const validationSchema = Yup.object(\r\n    {\r\n        email: Yup.string()\r\n            .email('Invalid email')\r\n            .required('Required'),\r\n        password: Yup.string()\r\n            .min(6, 'Too Short!')\r\n            .max(50, 'Too Long!')\r\n            .required('Required')\r\n    }\r\n);","import { makeAutoObservable } from \"mobx\"\r\nclass User {\r\n    user = {\r\n        token: null,\r\n        userId: null,  \r\n        role: null\r\n    }\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n    login (token = null, userId = null, role = null, save = false) {\r\n        this.user.token = token;\r\n        this.user.userId = userId;\r\n        this.user.role = role;\r\n        if(save){\r\n            localStorage.setItem('userData', JSON.stringify({\r\n                userId, token, role\r\n            }))\r\n        } \r\n    }\r\n\r\n    logout () {\r\n        this.user.token = null;\r\n        this.user.userId = null;\r\n        this.user.role = null;\r\n        localStorage.removeItem('userData')\r\n    }\r\n}\r\n\r\nexport const user = new User()","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\"\r\n  },\r\n  signInContainer:{\r\n    backgroundColor: '#93628F'\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#472747',\r\n    color:'#F3DECD'\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  signInInput: {\r\n    backgroundColor: '#F3DECD',\r\n    opacity: '.5',\r\n    transition: '.4s',\r\n    '&:focus-within': {\r\n      opacity: '1',\r\n    }\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#492848',\r\n    color:'#F3DECD',\r\n    '&:hover':{\r\n      backgroundColor: '#271526'\r\n    }\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport Checkbox from \"@material-ui/core/Checkbox\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { useFormik } from 'formik'\r\n\r\nimport { useHttp } from \"../../../../hooks/useHttp\"\r\nimport { validationSchema } from './SignInValidationSchema'\r\n\r\nimport { user } from '../../../../store/User'\r\nimport { useStyles } from \"./UseStyles\"\r\nimport { Spiner } from \"../../../Spiner/Spiner\"\r\n\r\n\r\nexport const SignIn = () => {\r\n  const classes = useStyles();\r\n  const [remrmber, setRemember] = useState(false)\r\n  const { loading, request, error } = useHttp()\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: '',\r\n      email: ''\r\n    },\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const res = await request('/auth/login','POST', values)\r\n        user.login(res.token, res.id, res.role, remrmber)\r\n      }catch (e) {\r\n        alert(e.message + error)\r\n        //from dev\r\n      }\r\n    },\r\n    validationSchema\r\n  })\r\n  const onRemember = e => {\r\n    setRemember(e.target.checked)\r\n  }\r\n  return (\r\n    <Grid \r\n    container \r\n    component=\"main\" \r\n    className={classes.root}\r\n    >\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid className={classes.signInContainer} item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          {loading ? <Spiner/> :\r\n          <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              className={classes.signInInput}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n           { formik.errors.email && <Alert severity=\"warning\">Зауважте Email має містити \"@\", \".\"! — <strong>Первеврте це поле!</strong></Alert>}\r\n            <TextField\r\n              className={classes.signInInput}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            { formik.errors.password && <Alert severity=\"warning\">Зауважте Password має містити не менше шести символів! — <strong>Первеврте це поле!</strong></Alert>}\r\n            <FormControlLabel\r\n              control={<Checkbox name='remember' value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n              onClick={onRemember}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n          }\r\n          { error && <Alert severity=\"error\">{`Увага виникла помилка! — ${error}`}</Alert>}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './CreateOrder.css';\r\n\r\nexport const CreateOrder = () => {\r\n    return (\r\n            <div className=\"order-create\">\r\n                <div className=\"order-create-header\">\r\n                    Create Order\r\n                </div>\r\n                <div className=\"order-create-buttons\">\r\n                    <Link to='/create' className=\"choose-btn\">\r\n                        <span className=\"material-icons\">add_circle_outline</span>\r\n                        <p> Створити </p>\r\n                    </Link>\r\n                    <Link to='/exists' className=\"choose-btn edit\">\r\n                        <span className=\"material-icons\">create</span>\r\n                        <p>\r\n                            Змінити <br /> існуюче\r\n                        </p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n};\r\n","import * as Yup from 'yup';\r\nexport  const validationSchema = Yup.object(\r\n    {\r\n        placeNumber: Yup.number()\r\n            .required('Required'),\r\n        employeeName: Yup.string()\r\n            .required('Required'),\r\n        employeeId: Yup.string()\r\n            .required('Required')\r\n    }\r\n);","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { user } from './User'; \r\n\r\nclass Order {\r\n    orders = []\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n    newOrder (employeeId, nrPlace, employeeName) {\r\n        const newOrder = {\r\n            id: uuidv4(),\r\n            employeeId,\r\n            nrPlace,\r\n            employeeName,\r\n            orderList: [],\r\n            price: 0\r\n        }\r\n        this.orders.push(newOrder)\r\n    }\r\n    removeOrder (id) {\r\n        this.orders = this.orders.filter(order => order.id !== id )\r\n    }\r\n    addToOrderList (orderId, { title, price, pk_course_id, count }) {\r\n        const idx = this.orders.findIndex(({ id }) => id === orderId);\r\n        const candidate = this.orders[idx].orderList.findIndex((course) => course.pk_course_id === pk_course_id )\r\n        this.orders[idx].price = +this.orders[idx].price + (price * count);\r\n        if(candidate !== -1){\r\n            this.orders[idx].orderList[candidate].count = +this.orders[idx].orderList[candidate].count + count\r\n        }\r\n        else{\r\n            const course = {\r\n                title,\r\n                price,\r\n                pk_course_id,\r\n                count\r\n            } \r\n            this.orders[idx].orderList.push(course)\r\n        }  \r\n    }\r\n    removeFromOrderList (orderId, courseId) {\r\n        const idx = this.orders.findIndex(({ id }) => id === orderId);\r\n        const idxCourse = this.orders[idx].orderList.findIndex(({pk_course_id}) => pk_course_id === courseId)\r\n        this.orders[idx].price = +this.orders[idx].price - (+this.orders[idx].orderList[idxCourse].price * +this.orders[idx].orderList[idxCourse].count);\r\n        this.orders[idx].orderList = this.orders[idx].orderList.filter(({pk_course_id}) => pk_course_id !== courseId )\r\n    }\r\n    payOrder (orderId) {\r\n        // Готую дані для запиту на сервер \r\n        const idx = this.orders.findIndex(({ id }) => id === orderId);\r\n        const list = this.orders[idx].orderList.map(course => course.title);\r\n        const orderForPay = {\r\n            id: this.orders[idx].id,\r\n            placeN: this.orders[idx].nrPlace,\r\n            list,\r\n            price: this.orders[idx].price,\r\n            status: \"active\",\r\n            waiter: this.orders[idx].employeeId\r\n        }\r\n        // Запит на додання нового замовлення в бл\r\n        fetch('/orders/add', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(orderForPay),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Employee ${user.user.token}`\r\n            }\r\n        })\r\n        .then(() => {\r\n            // Як тільки запит додано відсилаємо запит про оплату\r\n            fetch('/orders/pay',{\r\n                method: \"POST\",\r\n                body: JSON.stringify({orderId}),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Employee ${user.user.token}`\r\n                }\r\n            })\r\n            // Після оплати видаляємо замовлення зі стору\r\n            .then(() => this.removeOrder(orderId) )\r\n        })\r\n    }\r\n}\r\n\r\nexport const orders = new Order();","import React, { useState } from 'react'\r\nimport { useFormik } from 'formik'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { validationSchema } from './NewOrderValidation'\r\nimport { user } from '../../../store/User';\r\nimport { orders } from '../../../store/Order';\r\nimport './NewOrder.css';\r\n\r\nexport const NewOrder = () => {\r\n    const [success, setSuccess] = useState(false) \r\n    const formik = useFormik({\r\n        initialValues: {\r\n          placeNumber: '',\r\n          employeeName: '',\r\n          employeeId: user.user.userId\r\n        },\r\n        onSubmit: (values) => {\r\n            orders.newOrder(values.employeeId, values.placeNumber, values.employeeName)\r\n            setSuccess(true)\r\n        },\r\n        validationSchema\r\n      })\r\n \r\n    const onFocusHandler = (e) => {\r\n        e.target.parentElement.classList = 'inputs-wrap is-active is-completed';\r\n    }\r\n    const onFocusOutHandler = (e) => {\r\n        if(e.target.value === ''){\r\n            e.target.parentElement.classList = 'inputs-wrap';\r\n        }\r\n    }\r\n        return (\r\n            <div className='new-order-wrap'>\r\n                <div className='new-order-header'>New Order</div>\r\n                <form\r\n                    onSubmit={formik.handleSubmit}\r\n                    className='new-order__add-form'\r\n                >\r\n                    <div className='inputs-wrap'>\r\n                        <label\r\n                            htmlFor='placeNumber'\r\n                            className='inputs-wrap__label'\r\n                        >\r\n                            Номер столу\r\n                            <span className=\"material-icons\">\r\n                                push_pin\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            onFocus={onFocusHandler}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={onFocusOutHandler}\r\n                            className='inputs-wrap__text-inputs'\r\n                            type='text'\r\n                            value={formik.values.placeNumber}\r\n                            name='placeNumber'\r\n                            required\r\n                            id='placeNumber'\r\n                        />\r\n                    </div>\r\n                    <div className='inputs-wrap'>\r\n                        <label\r\n                            htmlFor='employeeId'\r\n                            className='inputs-wrap__label'\r\n                        >\r\n                            Ім'я офіціанта\r\n                            <span className=\"material-icons\">\r\n                                perm_identity\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            onFocus={onFocusHandler}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={onFocusOutHandler}\r\n                            className='inputs-wrap__text-inputs'\r\n                            type='text'\r\n                            value={formik.values.employeeName}\r\n                            name='employeeName'\r\n                            required\r\n                            id='employeeName'\r\n                        />\r\n                    </div>\r\n                    <div className='inputs-wrap'>\r\n                        <label\r\n                            htmlFor='employeeId'\r\n                            className='inputs-wrap__label'\r\n                        >\r\n                            Id офіціанта\r\n                            <span className=\"material-icons\">\r\n                                perm_identity\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            onFocus={onFocusHandler}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={onFocusOutHandler}\r\n                            className='inputs-wrap__text-inputs'\r\n                            type='text'\r\n                            value={formik.values.employeeId}\r\n                            name='employeeId'\r\n                            required\r\n                            id='employeeId'\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        type='submit'\r\n                        className='btn-submit'\r\n                    >\r\n                        Створити\r\n                        <span className=\"material-icons\">\r\n                        send\r\n                    </span>\r\n                    </button>\r\n                </form>\r\n                { success && <Alert severity=\"success\">Успіх — Замовлення створено!</Alert>}\r\n            </div>\r\n        )\r\n};\r\n\r\n","import React from 'react';\r\n\r\nexport const HomePage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport  './OrderListItem.css';\r\n\r\nexport const OrderListItem = ({placeN, employeeName, handleClick, onDelete}) => {\r\n    return (\r\n        <div className='order-list-item'>\r\n            <p className='order-list-item__place'\r\n            >\r\n                { `Столик: ${placeN}`}\r\n            </p>\r\n            <p\r\n                className='order-list-item__employee'\r\n            >\r\n\r\n                {`Офіціант: ${employeeName}`}\r\n            </p>\r\n            <div className='order-item-buttons'>\r\n                <button\r\n                    onClick={handleClick}\r\n                    className='order-list-item__btn'\r\n                >\r\n                    Відкрити\r\n                </button>\r\n                <button onClick={onDelete}\r\n                    className='order-list-item__btn'\r\n                >\r\n                    Видалити\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport { orders } from '../../store/Order'\r\nimport { OrderListItem } from \"./OrderListItem/OrderListItem\";\r\n\r\nimport './ExistsOrders.css';\r\n\r\nexport const ExistsOrders = observer(() => {\r\n\r\n    let history = useHistory();\r\n\r\n    const onDelete = orderId => {\r\n        const idx = orders.orders.findIndex(order => order.id === orderId)\r\n        if(orders.orders[idx].orderList.length > 0){\r\n            const access = !!window.confirm('Замовлення не пусте! \\n Ви впевнені що хочете його видалити ?');\r\n            access && orders.removeOrder(orderId)\r\n        }\r\n        else{\r\n            orders.removeOrder(orderId)\r\n        }\r\n    }\r\n    const renderList = list => list.map(item => \r\n            <OrderListItem \r\n            placeN={item.nrPlace} \r\n            employeeName={item.employeeName} \r\n            key={item.id}\r\n            onDelete={() => onDelete(item.id)}\r\n            handleClick={() => history.push(`/order/${item.id}`)}\r\n            /> \r\n        );\r\n    const existsOrders = renderList(orders.orders); \r\n    return (\r\n        <div className='order-container'>\r\n            <div className='exists-orders-header'>\r\n                <p>\r\n                    Orders\r\n                </p>\r\n            </div>\r\n            <form className=\"order-search-panel\">\r\n                <input\r\n                    className='search-input'\r\n                    type=\"text\"\r\n                    name='search'\r\n                    id='search'\r\n                />\r\n            </form>\r\n            <div className='order-list'>\r\n                { existsOrders.length === 0 ? <Alert severity=\"info\">Замовлень немає</Alert> : existsOrders}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import React from 'react';\r\n\r\nimport './OrderListItem.css'\r\nexport const OrderListItem = ({title, price, count, onDelete}) => {\r\n    return (\r\n            <div className='course-item-container'>\r\n                <div className='course-list-item'>\r\n                    <p className='course-list-item__title'>{`Позиція: ${title}`}</p>\r\n                    <p className='course-list-item__price'>{`Ціна: ${price}`}</p>\r\n                    <p className='course-list-item__count'>{`Кількість: ${count}`}</p>\r\n                </div>\r\n                <div className='order-buttons'>\r\n                    <button onClick={onDelete}>\r\n                        <span className=\"material-icons\">\r\n                             clear\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n};\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport './Order.css'\r\nimport { orders } from '../../store/Order';\r\nimport { OrderListItem } from './OrderListItem/OrderListItem';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Order = observer(({orderId}) => {\r\n    const history = useHistory()\r\n    const renderList = (list) => list.map(course => \r\n        <OrderListItem {...course} \r\n            key={course.pk_course_id}\r\n            onDelete={()=> {orders.removeFromOrderList(orderId, course.pk_course_id)}}\r\n        />\r\n    )\r\n    const idx = orders.orders.findIndex(order => order.id === orderId)\r\n    const { employeeName, nrPlace, price } = orders.orders[idx]\r\n    const orderList = renderList(orders.orders[idx].orderList)\r\n    return (\r\n            <div className='order-container'>\r\n                <h3 className='order-title'>\r\n                    Order\r\n                </h3>\r\n                <p className='order-header-info'>{`Номер столу № ${nrPlace} | Офіціант: ${employeeName}`}</p>\r\n                <div className='order-btn-container'>\r\n                    <button \r\n                    onClick={() => history.push(`/category/${orderId}`)}\r\n                    className='add-course-from-order-btn'>\r\n                        Додати позицію\r\n                    </button>\r\n                    <button \r\n                    onClick={() => {\r\n                        orders.payOrder(orderId)\r\n                        history.push('/exists')\r\n                    }}\r\n                    className='add-course-from-order-btn'>\r\n                        Оплатити\r\n                    </button>\r\n                </div>\r\n                { orderList.length === 0 ? <Alert severity=\"info\">Замовлення пусте</Alert> : orderList}\r\n                <p className='order-price'>{`ЦІНА ЗАМОВЛЕННЯ: ${price}`}</p>\r\n            </div>\r\n    );\r\n});\r\n","import React from 'react';\r\n\r\nimport './CategoryItem.css'\r\n\r\nexport const CategoryItem = ({title, handleClick }) => (\r\n        <button \r\n        onClick={handleClick}\r\n        className='category-list-item'\r\n        >\r\n            <p className='category-title'>{title}</p>\r\n        </button>\r\n    );\r\n\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {CategoryItem} from \"./CtegoryItem/CategoryItem\";\r\n\r\nimport './CategoryList.css'\r\nconst categories =\r\n    [\r\n        {\r\n            title: 'Перші страви',\r\n            categoryName: 'first_courses',\r\n        },\r\n        {\r\n            title: 'Холодні страви',\r\n            categoryName: 'cold_food',\r\n        },\r\n        {\r\n            title: 'Гарячі страви',\r\n            categoryName: 'hot_food',\r\n        },\r\n        {\r\n            title: 'Салати',\r\n            categoryName: 'salads',\r\n        },\r\n        {\r\n            title: 'Напої',\r\n            categoryName: 'drinks',\r\n        },\r\n        // {\r\n        //     title: 'Інгредієнти',\r\n        //     categoryName: 'ingredients',\r\n        //     pathToList: '#'\r\n        // }\r\n    ];\r\n\r\n\r\nexport const CategoryList = ({ orderId }) => {\r\n    const history = useHistory();\r\n    const renderCategory = categoryList => \r\n        categoryList.map(\r\n            (category, i) => \r\n                <CategoryItem \r\n                key={i} \r\n                {...category}\r\n                handleClick={(e) => {history.push(`/course/${category.categoryName}$$$${orderId}`)}}\r\n                />\r\n            )\r\n    return (\r\n        <div className='categories'>\r\n            <h3 className='category-list-title'>Categories</h3>\r\n            <div className='category-list'>\r\n                {renderCategory(categories)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport './CourseItem.css';\r\n\r\nexport const CourseItem = ({ title, composition, url, price, id, onAdd }) => {\r\n  const [count, setCount] = useState(0);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAdd(count)\r\n  }\r\n  const handleChange = (e) => {\r\n    setCount(e.target.value)\r\n  }\r\n  return (\r\n      <div\r\n          className='item-container'\r\n          key={id}>\r\n        <div className=\"item-content\">\r\n          <img\r\n              src={url}\r\n              alt=\"img\"\r\n              className='item-img'\r\n          />\r\n          <h3 className='item-title'>{title}</h3>\r\n          <p className='item-description'>{composition}</p>\r\n          <div className=\"item-fields\">\r\n              <p>Price:\r\n                <span className='no-style-field'>\r\n                    {price} грн\r\n                </span>\r\n              </p>\r\n          </div>\r\n          <form \r\n          className=\"item-btn\"\r\n          onSubmit={handleSubmit}\r\n          >\r\n              <input\r\n                  className='count'\r\n                  type=\"number\"\r\n                  onChange={handleChange}\r\n              />\r\n              <button type='submit' className='add btn'>Додати</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { user } from './User';\r\nclass Courses {\r\n    courses = []\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n    fetchCourses(){\r\n        return new Promise((resolve, reject) => {\r\n            fetch('/common/course/all',{\r\n                method: 'GET',\r\n                headers: {\r\n                    Authorization: `Employee ${user.user.token}`\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    this.courses = [...json]\r\n                    resolve()\r\n                })\r\n                .catch(error => {\r\n                    reject(error.message)\r\n                })\r\n        })\r\n    }\r\n    deleteById(courseId){\r\n        return new Promise((resolve, reject) => {\r\n            fetch('/admin/course/delete',{\r\n                method: 'POST',\r\n                body: JSON.stringify({courseId}),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `${user.user.role} ${user.user.token}`\r\n                },\r\n            })\r\n                .then(() => resolve())\r\n                .catch(error => {\r\n                    reject(error.message)\r\n                })\r\n        })\r\n    }\r\n    getByCategoryName(categoryName){\r\n        return this.courses.filter(course => course.category_of_course === categoryName)\r\n    }\r\n}\r\n\r\nexport const courses = new Courses();","import React, { useEffect, useCallback } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport { CourseItem } from \"./CourseItem/CourseItem\";\r\nimport { courses } from \"../../store/Courses\";\r\nimport { orders } from \"../../store/Order\"\r\n\r\nimport './CoursesList.css';\r\n\r\nexport const CoursesList = observer(({orderId, category}) => {\r\n    const categoryName = category.split('_').join(' ')\r\n    const listItems = list => {\r\n        return list.map(\r\n                    ({pk_course_id, title, composition, price, img_path}) => {\r\n                        return (\r\n                            <CourseItem\r\n                                    id={pk_course_id}\r\n                                    key={pk_course_id}\r\n                                    title={title || \"asd\"}\r\n                                    composition={composition.join(' ')}\r\n                                    price={price}\r\n                                    url={img_path}\r\n                                    onAdd = {count => orders.addToOrderList(orderId, { \r\n                                        title, \r\n                                        price: parseInt(price), \r\n                                        pk_course_id, \r\n                                        count: parseInt(count) \r\n                                    })}\r\n                                    />\r\n                                )\r\n                    })\r\n        }    \r\n    const getCourse = useCallback(\r\n        () => {\r\n            courses.fetchCourses().then(() => {}).catch(e => alert(e))\r\n        },\r\n        [],\r\n    )  \r\n    useEffect(() => getCourse(),[getCourse])\r\n\r\n    return (\r\n        <div className='courses-container'>\r\n            <h3 className='courses-list-header'>Courses List</h3>\r\n            <div\r\n            className='courses-list'\r\n            >\r\n                {listItems(courses.getByCategoryName(categoryName))}\r\n            </div>\r\n        </div>   \r\n    );\r\n});\r\n\r\n","import * as Yup from 'yup';\r\nexport  const validationSchema = Yup.object(\r\n    {\r\n        email: Yup.string()\r\n            .email('Invalid email')\r\n            .required('Required'),\r\n        password: Yup.string()\r\n            .min(10, 'Too Short!')\r\n            .max(50, 'Too Long!')\r\n            .required('Required')\r\n    }\r\n);","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\"\r\n  },\r\n  signInContainer:{\r\n    backgroundColor: '#93628F'\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#472747',\r\n    color:'#F3DECD'\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  signInInput: {\r\n    backgroundColor: '#F3DECD',\r\n    opacity: '.5',\r\n    transition: '.4s',\r\n    '&:focus-within': {\r\n      opacity: '1',\r\n    }\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#492848',\r\n    color:'#F3DECD',\r\n    '&:hover':{\r\n      backgroundColor: '#271526'\r\n    }\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport Checkbox from \"@material-ui/core/Checkbox\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useHttp } from \"../../../../hooks/useHttp\"\r\nimport { validationSchema } from './SignInValidationSchema'\r\n\r\nimport { user } from '../../../../store/User'\r\nimport { useStyles } from \"./UseStyles\"\r\nimport { Spiner } from \"../../../Spiner/Spiner\"\r\n\r\n\r\nexport const SignInAdmin = () => {\r\n  const classes = useStyles();\r\n  const [remember, setRemember] = useState(false)\r\n  const { loading, request, error } = useHttp()\r\n  const history = useHistory();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: '',\r\n      email: ''\r\n    },\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const res = await request('/admin/auth/login','POST', values)\r\n\r\n        user.login(res.token, res.id, res.role, remember)\r\n        history.push('/main')\r\n      }catch (e) {\r\n        alert(e.message + error)\r\n        //from dev\r\n      }\r\n    },\r\n    validationSchema\r\n  })\r\n  const onRemember = e => {\r\n    setRemember(e.target.checked)\r\n  }\r\n  return (\r\n    <Grid \r\n    container \r\n    component=\"main\" \r\n    className={classes.root}\r\n    >\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid className={classes.signInContainer} item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in administrator\r\n          </Typography>\r\n          {loading ? <Spiner/> :\r\n          <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              className={classes.signInInput}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n           { formik.errors.email && <Alert severity=\"warning\">Зауважте Email має містити \"@\", \".\"! — <strong>Первеврте це поле!</strong></Alert>}\r\n            <TextField\r\n              className={classes.signInInput}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            { formik.errors.password && <Alert severity=\"warning\">Зауважте Password має містити не менше шести символів! — <strong>Первеврте це поле!</strong></Alert>}\r\n            <FormControlLabel\r\n              control={<Checkbox name='remember' value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n              onClick={onRemember}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link to=\"/sign-up\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}></Box>\r\n          </form>\r\n          }\r\n          { error && <Alert severity=\"error\">{`Увага виникла помилка! — ${error}`}</Alert>}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import * as Yup from 'yup';\r\nexport  const validationSchema = Yup.object(\r\n    // title: '',\r\n    // composition: '',\r\n    // costPrice: 0,\r\n    // price: 0,\r\n    // categoryOfCourse: '',\r\n    // imgPath: '',\r\n    {\r\n        title: Yup.string()\r\n            .required('Required'),\r\n        composition: Yup.string()\r\n            .required('Required'),\r\n        costPrice: Yup.number()\r\n            .required('Required'),\r\n        price: Yup.number()\r\n            .required('Required'),\r\n        categoryOfCourse: Yup.string()\r\n            .required('Required'),\r\n        imgPath: Yup.string()\r\n            .required('Required')\r\n    }\r\n);","import React, { useState } from 'react'\r\nimport { useFormik } from 'formik'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { validationSchema } from './AddCourseValidation'\r\nimport { user } from '../../../store/User'\r\n\r\nimport './AddCourse.css'\r\nimport {useHttp} from \"../../../hooks/useHttp\";\r\nimport {Spiner} from \"../../Spiner/Spiner\";\r\nexport const AddCourse = () => {\r\n    const [success, setSuccess] = useState(false)\r\n    const { loading, request, error } = useHttp()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: '',\r\n            composition: '',\r\n            costPrice: 0,\r\n            price: 0,\r\n            categoryOfCourse: '',\r\n            imgPath: '',\r\n        },\r\n        onSubmit: (values) => {\r\n            const composition = values.composition.split(' ')\r\n            request(\r\n                '/admin/course/add',\r\n                'POST',\r\n                {\r\n                    title: values.title,\r\n                    composition,\r\n                    cost_price: values.costPrice,\r\n                    price: values.price,\r\n                    category_of_course: values.categoryOfCourse,\r\n                    img_path: values.imgPath\r\n                },\r\n                { Authorization: `${user.user.role} ${user.user.token}`})\r\n            if(!error && !loading){\r\n                setSuccess(true)\r\n            }\r\n        },\r\n        validationSchema\r\n    })\r\n\r\n    const onFocusHandler = (e) => {\r\n        e.target.parentElement.classList = 'inputs-wrap is-active is-completed';\r\n    }\r\n    const onFocusOutHandler = (e) => {\r\n        if(e.target.value === ''){\r\n            e.target.parentElement.classList = 'inputs-wrap';\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='new-order-wrap'>\r\n                <div className='new-order-header'>New Course</div>\r\n                { loading ? <Spiner/> :\r\n                    <form\r\n                    onSubmit={formik.handleSubmit}\r\n                    className='new-order__add-form'\r\n                >\r\n                    <div className='inputs-wrap'>\r\n                        <label\r\n                            htmlFor='title'\r\n                            className='inputs-wrap__label'\r\n                        >\r\n                            Назва люда\r\n                            <span className=\"material-icons\">\r\n                                push_pin\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            onFocus={onFocusHandler}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={onFocusOutHandler}\r\n                            className='inputs-wrap__text-inputs'\r\n                            type='text'\r\n                            value={formik.values.title}\r\n                            name='title'\r\n                            required\r\n                            id='title'\r\n                        />\r\n                    </div>\r\n                    <div className='inputs-wrap'>\r\n                        <label\r\n                            htmlFor='composition'\r\n                            className='inputs-wrap__label'\r\n                        >\r\n                            Склад\r\n                            <span className=\"material-icons\">\r\n                                push_pin\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            onFocus={onFocusHandler}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={onFocusOutHandler}\r\n                            className='inputs-wrap__text-inputs'\r\n                            type='text'\r\n                            value={formik.values.composition}\r\n                            name='composition'\r\n                            required\r\n                            id='composition'\r\n                        />\r\n                    </div>\r\n                    <div className='inputs-wrap'>\r\n                        <label\r\n                            htmlFor='costPrice'\r\n                            className='inputs-wrap__label'\r\n                        >\r\n                            Собівартість\r\n                            <span className=\"material-icons\">\r\n                                push_pin\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            onFocus={onFocusHandler}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={onFocusOutHandler}\r\n                            className='inputs-wrap__text-inputs'\r\n                            type='text'\r\n                            value={formik.values.costPrice}\r\n                            name='costPrice'\r\n                            required\r\n                            id='costPrice'\r\n                        />\r\n                    </div>\r\n                    <div className='inputs-wrap'>\r\n                        <label\r\n                            htmlFor='price'\r\n                            className='inputs-wrap__label'\r\n                        >\r\n                            Ціна\r\n                            <span className=\"material-icons\">\r\n                                perm_identity\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            onFocus={onFocusHandler}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={onFocusOutHandler}\r\n                            className='inputs-wrap__text-inputs'\r\n                            type='text'\r\n                            value={formik.values.price}\r\n                            name='price'\r\n                            required\r\n                            id='price'\r\n                        />\r\n                    </div>\r\n                    <div className='inputs-wrap'>\r\n                        <label\r\n                            htmlFor='categoryOfCourse'\r\n                            className='inputs-wrap__label'\r\n                        >\r\n                            Категорія\r\n                            <span className=\"material-icons\">\r\n                                perm_identity\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            onFocus={onFocusHandler}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={onFocusOutHandler}\r\n                            className='inputs-wrap__text-inputs'\r\n                            type='text'\r\n                            value={formik.values.categoryOfCourse}\r\n                            name='categoryOfCourse'\r\n                            required\r\n                            id='categoryOfCourse'\r\n                        />\r\n                    </div>\r\n                    <div className='inputs-wrap'>\r\n                        <label\r\n                            htmlFor='imgPath'\r\n                            className='inputs-wrap__label'\r\n                        >\r\n                            Фото\r\n                            <span className=\"material-icons\">\r\n                                perm_identity\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            onFocus={onFocusHandler}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={onFocusOutHandler}\r\n                            className='inputs-wrap__text-inputs'\r\n                            type='text'\r\n                            value={formik.values.imgPath}\r\n                            name='imgPath'\r\n                            required\r\n                            id='imgPath'\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        type='submit'\r\n                        className='btn-submit'\r\n                    >\r\n                        Створити\r\n                        <span className=\"material-icons\">\r\n                        send\r\n                    </span>\r\n                    </button>\r\n                </form>\r\n                }\r\n                { error && <Alert severity=\"error\">{error.message}!</Alert>}\r\n                { success && <Alert severity=\"success\">Успіх — Позицію створено!</Alert>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport './CourseItem.css';\r\n\r\nexport const CourseItem = ({ title, composition, url, price, id, onRemove }) => {\r\n  return (\r\n      <div\r\n          className='item-container'\r\n          key={id}>\r\n        <div className=\"item-content\">\r\n          <img\r\n              src={url}\r\n              alt=\"img\"\r\n              className='item-img'\r\n          />\r\n          <h3 className='item-title'>{title}</h3>\r\n          <p className='item-description'>{composition}</p>\r\n          <div className=\"item-fields\">\r\n              <p>Price:\r\n                <span className='no-style-field'>\r\n                    {price} грн\r\n                </span>\r\n              </p>\r\n          </div>\r\n            <div className='item-btn'>\r\n                <button onClick={onRemove} type='submit' className='add btn'>Видалити</button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport { CourseItem } from \"./CourseItem/CourseItem\";\r\nimport { courses } from \"../../../store/Courses\";\r\n\r\nimport './RemoveList.css';\r\n\r\nexport const RemoveList = observer(() => {\r\n    const onRemove = (id) => {\r\n        courses.deleteById(id)\r\n            .then(() => {\r\n                courses.fetchCourses()\r\n            })\r\n    }\r\n    const listItems = list => {\r\n        return list.map(\r\n                    ({pk_course_id, title, composition, price, img_path}) => {\r\n                        return (\r\n                            <CourseItem\r\n                                    id={pk_course_id}\r\n                                    key={pk_course_id}\r\n                                    title={title || \"asd\"}\r\n                                    composition={composition.join(' ')}\r\n                                    price={price}\r\n                                    url={img_path}\r\n                                    onRemove = {() => onRemove(pk_course_id)}\r\n                                    />\r\n                                )\r\n                    })\r\n        }\r\n    const getCourse = useCallback(\r\n        () => courses.fetchCourses(), [])\r\n    useEffect(() => getCourse(),[])\r\n\r\n    return (\r\n        <div className='courses-container'>\r\n            <h3 className='courses-list-header'>Courses List</h3>\r\n            <div\r\n            className='courses-list'\r\n            >\r\n                {listItems(courses.courses)}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { user } from '../../store/User';\r\n\r\nimport \"./NavBar.css\";\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n      <div className=\"nav-bar\">\r\n        <nav className=\"link-list\">\r\n          <div className='links'>\r\n              {\r\n                  user.user.role === 'employee' &&\r\n                  <>\r\n                      <Link className=\"link\" to='/main'>\r\n                          Головна\r\n                      </Link>\r\n                      <Link className=\"link\" to=\"/choose\">\r\n                          Замовлення\r\n                      </Link>\r\n                  </>\r\n              }\r\n              {\r\n                  user.user.role === 'admin' &&\r\n                  <>\r\n                      <Link className=\"link\" to='/main'>\r\n                          Головна\r\n                      </Link>\r\n                      <Link className=\"link\" to='/sign-up'>\r\n                          Зареэструвати працівника\r\n                      </Link>\r\n                      <Link className=\"link\" to='/add-course'>\r\n                          Додати блюдо\r\n                      </Link>\r\n                      <Link className=\"link\" to='/remove-course'>\r\n                          Видалити блюдо\r\n                      </Link>\r\n                  </>\r\n              }\r\n          </div>\r\n          <button className='log-out-btn' onClick={() => user.logout()}>\r\n            <span className=\"material-icons\">\r\n              exit_to_app\r\n            </span>\r\n          </button>\r\n        </nav>\r\n      </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {NavBar} from \"../../components/NavBar/NavBar\";\r\n\r\nimport './MainPage.css'\r\n\r\nexport const MainPage = ({ children }) => {\r\n    return (\r\n        <>\r\n            <NavBar/>\r\n            <div className='main-container'>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { observer } from \"mobx-react-lite\"\r\n\r\nimport { Routes } from \"../../routes/Routes\"\r\nimport { MainPage } from \"../../pages/MainPage/MainPage\"\r\nimport { Spiner } from \"../Spiner/Spiner\"\r\n\r\nimport { user } from '../../store/User'\r\n\r\nexport const App = observer(() => {\r\n    const { token, role } = user.user;\r\n    const [ready, setReady] = useState(false)\r\n    const isAuthenticated = !!token;\r\n\r\n    const routes = Routes(isAuthenticated, role);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('userData'))\r\n        if (data && data.token && data.userId && data.role) {\r\n            user.login(data.token, data.userId, data.role)\r\n        }\r\n        setReady(true)\r\n    }, [])\r\n    if(!ready){\r\n        return <Spiner/>\r\n    }\r\n    if(isAuthenticated){\r\n        return (\r\n            <>\r\n                <Router>\r\n                    <MainPage>\r\n                        {routes}\r\n                    </MainPage>\r\n                </Router>\r\n            </>\r\n        )\r\n    }else {\r\n        return (\r\n            <>\r\n                    <Router>\r\n                            {routes}\r\n                    </Router>\r\n            </>\r\n        )\r\n    }\r\n\r\n})\r\n\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport { SignUp } from \"../components/Forms/Employees/SignUp/SignUp\";\r\nimport { SignIn } from \"../components/Forms/Employees/SignIn/SignIn\";\r\nimport { CreateOrder } from \"../components/CreateOrder/CreateOrder\";\r\nimport { NewOrder } from \"../components/Forms/NewOrder/NewOrder\";\r\nimport { HomePage } from \"../pages/HomePage/HomePage\";\r\nimport { ExistsOrders } from '../components/ExistsOrders/ExistsOrders'\r\nimport { Order } from '../components/Order/Order';\r\nimport { CategoryList} from '../components/CategoryList/CategoryList';\r\nimport { CoursesList } from '../components/CoursesList/CoursesList';\r\nimport { SignInAdmin } from \"../components/Forms/Administrators/SignIn/SignInAdmin\";\r\nimport { AddCourse } from \"../components/Admin/AddCourse/AddCourse\";\r\nimport {RemoveList} from \"../components/Admin/RemoveCourse/RemoveList\";\r\n\r\nexport const Routes = (isAuthenticated, role) => {\r\n    if (isAuthenticated && role === 'admin') {\r\n        return (\r\n                <Switch>\r\n                    <Route path=\"/main\">\r\n                        <HomePage/>\r\n                    </Route>\r\n                    <Route path=\"/sign-up\">\r\n                        <SignUp/>\r\n                    </Route>\r\n                    <Route path=\"/add-course\">\r\n                        <AddCourse/>\r\n                    </Route>\r\n                    <Route path=\"/remove-course\">\r\n                        <RemoveList/>\r\n                    </Route>\r\n                    <Redirect to=\"/main\" />\r\n                </Switch>\r\n            )\r\n    }\r\n    if (isAuthenticated && role === 'employee') {\r\n        return (\r\n            <>\r\n            <Switch>\r\n                <Route path=\"/main\">\r\n                    <HomePage/>\r\n                </Route>\r\n                <Route path=\"/choose\">\r\n                    <CreateOrder />\r\n                </Route>\r\n                <Route path=\"/exists\">\r\n                    <ExistsOrders/>\r\n                </Route>\r\n                <Route path=\"/create\">\r\n                    <NewOrder/>\r\n                </Route>\r\n                <Route \r\n                path=\"/order/:id\"\r\n                render={({match}) => <Order orderId={match.params.id}/>}\r\n                />\r\n                <Route \r\n                path=\"/category/:id\"\r\n                render={({match}) => <CategoryList orderId={match.params.id}/>}\r\n                />\r\n                <Route \r\n                path=\"/course/:id\"\r\n                render={({match}) => {\r\n                    const param = match.params.id.split('$$$')\r\n                    return <CoursesList \r\n                            orderId={param[1]}\r\n                            category={param[0]} \r\n                            />\r\n                        }}\r\n                />\r\n                <Redirect to=\"/main\" />\r\n            </Switch>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/sign-in\" exact>\r\n                <SignIn/>\r\n            </Route>\r\n            <Route path=\"/sign-in/D7EF2F77C496BC03F913E01D3161AA7EB7E7D427\">\r\n                <SignInAdmin />\r\n            </Route>\r\n            <Redirect to=\"/sign-in\" />\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from \"./components/App/App\";\n\nimport './main.css';\n\nReactDOM.render(\n        <App />\n    , document.getElementById('root'));\n"],"sourceRoot":""}